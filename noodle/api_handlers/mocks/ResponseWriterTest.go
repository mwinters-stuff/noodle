// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ResponseWriterTest is an autogenerated mock type for the ResponseWriterTest type
type ResponseWriterTest struct {
	mock.Mock
}

type ResponseWriterTest_Expecter struct {
	mock *mock.Mock
}

func (_m *ResponseWriterTest) EXPECT() *ResponseWriterTest_Expecter {
	return &ResponseWriterTest_Expecter{mock: &_m.Mock}
}

// Header provides a mock function with given fields:
func (_m *ResponseWriterTest) Header() http.Header {
	ret := _m.Called()

	var r0 http.Header
	if rf, ok := ret.Get(0).(func() http.Header); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Header)
		}
	}

	return r0
}

// ResponseWriterTest_Header_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Header'
type ResponseWriterTest_Header_Call struct {
	*mock.Call
}

// Header is a helper method to define mock.On call
func (_e *ResponseWriterTest_Expecter) Header() *ResponseWriterTest_Header_Call {
	return &ResponseWriterTest_Header_Call{Call: _e.mock.On("Header")}
}

func (_c *ResponseWriterTest_Header_Call) Run(run func()) *ResponseWriterTest_Header_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ResponseWriterTest_Header_Call) Return(_a0 http.Header) *ResponseWriterTest_Header_Call {
	_c.Call.Return(_a0)
	return _c
}

// Write provides a mock function with given fields: _a0
func (_m *ResponseWriterTest) Write(_a0 []byte) (int, error) {
	ret := _m.Called(_a0)

	var r0 int
	if rf, ok := ret.Get(0).(func([]byte) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResponseWriterTest_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type ResponseWriterTest_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - _a0 []byte
func (_e *ResponseWriterTest_Expecter) Write(_a0 interface{}) *ResponseWriterTest_Write_Call {
	return &ResponseWriterTest_Write_Call{Call: _e.mock.On("Write", _a0)}
}

func (_c *ResponseWriterTest_Write_Call) Run(run func(_a0 []byte)) *ResponseWriterTest_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *ResponseWriterTest_Write_Call) Return(_a0 int, _a1 error) *ResponseWriterTest_Write_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// WriteHeader provides a mock function with given fields: statusCode
func (_m *ResponseWriterTest) WriteHeader(statusCode int) {
	_m.Called(statusCode)
}

// ResponseWriterTest_WriteHeader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteHeader'
type ResponseWriterTest_WriteHeader_Call struct {
	*mock.Call
}

// WriteHeader is a helper method to define mock.On call
//   - statusCode int
func (_e *ResponseWriterTest_Expecter) WriteHeader(statusCode interface{}) *ResponseWriterTest_WriteHeader_Call {
	return &ResponseWriterTest_WriteHeader_Call{Call: _e.mock.On("WriteHeader", statusCode)}
}

func (_c *ResponseWriterTest_WriteHeader_Call) Run(run func(statusCode int)) *ResponseWriterTest_WriteHeader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *ResponseWriterTest_WriteHeader_Call) Return() *ResponseWriterTest_WriteHeader_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewResponseWriterTest interface {
	mock.TestingT
	Cleanup(func())
}

// NewResponseWriterTest creates a new instance of ResponseWriterTest. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResponseWriterTest(t mockConstructorTestingTNewResponseWriterTest) *ResponseWriterTest {
	mock := &ResponseWriterTest{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
