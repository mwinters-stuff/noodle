/* tslint:disable */
/* eslint-disable */
/**
 * Noodle
 * Noodle
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Application
 */
export interface Application {
  /**
   *
   * @type {number}
   * @memberof Application
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  templateAppid?: string;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  website?: string;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  license?: string;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  description?: string;
  /**
   *
   * @type {boolean}
   * @memberof Application
   */
  enhanced?: boolean;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  tileBackground?: string;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  icon?: string;
}

/**
 * Check if a given object implements the Application interface.
 */
export function instanceOfApplication(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ApplicationFromJSON(json: any): Application {
  return ApplicationFromJSONTyped(json, false);
}

export function ApplicationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Application {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'Id') ? undefined : json['Id'],
    templateAppid: !exists(json, 'TemplateAppid')
      ? undefined
      : json['TemplateAppid'],
    name: !exists(json, 'Name') ? undefined : json['Name'],
    website: !exists(json, 'Website') ? undefined : json['Website'],
    license: !exists(json, 'License') ? undefined : json['License'],
    description: !exists(json, 'Description') ? undefined : json['Description'],
    enhanced: !exists(json, 'Enhanced') ? undefined : json['Enhanced'],
    tileBackground: !exists(json, 'TileBackground')
      ? undefined
      : json['TileBackground'],
    icon: !exists(json, 'Icon') ? undefined : json['Icon'],
  };
}

export function ApplicationToJSON(value?: Application | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    Id: value.id,
    TemplateAppid: value.templateAppid,
    Name: value.name,
    Website: value.website,
    License: value.license,
    Description: value.description,
    Enhanced: value.enhanced,
    TileBackground: value.tileBackground,
    Icon: value.icon,
  };
}
