/* tslint:disable */
/* eslint-disable */
/**
 * Noodle
 * Noodle
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSession
 */
export interface UserSession {
    /**
     * 
     * @type {number}
     * @memberof UserSession
     */
    Id?: number;
    /**
     * 
     * @type {number}
     * @memberof UserSession
     */
    UserId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserSession
     */
    Token?: string;
    /**
     * 
     * @type {Date}
     * @memberof UserSession
     */
    Issued?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserSession
     */
    Expires?: Date;
}

/**
 * Check if a given object implements the UserSession interface.
 */
export function instanceOfUserSession(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserSessionFromJSON(json: any): UserSession {
    return UserSessionFromJSONTyped(json, false);
}

export function UserSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSession {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'Id': !exists(json, 'Id') ? undefined : json['Id'],
        'UserId': !exists(json, 'UserId') ? undefined : json['UserId'],
        'Token': !exists(json, 'Token') ? undefined : json['Token'],
        'Issued': !exists(json, 'Issued') ? undefined : (new Date(json['Issued'])),
        'Expires': !exists(json, 'Expires') ? undefined : (new Date(json['Expires'])),
    };
}

export function UserSessionToJSON(value?: UserSession | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.Id,
        'UserId': value.UserId,
        'Token': value.Token,
        'Issued': value.Issued === undefined ? undefined : (value.Issued.toISOString()),
        'Expires': value.Expires === undefined ? undefined : (value.Expires.toISOString()),
    };
}

