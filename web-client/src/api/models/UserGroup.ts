/* tslint:disable */
/* eslint-disable */
/**
 * Noodle
 * Noodle
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserGroup
 */
export interface UserGroup {
    /**
     * 
     * @type {number}
     * @memberof UserGroup
     */
    Id?: number;
    /**
     * 
     * @type {number}
     * @memberof UserGroup
     */
    GroupId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserGroup
     */
    GroupDN?: string;
    /**
     * 
     * @type {string}
     * @memberof UserGroup
     */
    GroupName?: string;
    /**
     * 
     * @type {number}
     * @memberof UserGroup
     */
    UserId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserGroup
     */
    UserDN?: string;
    /**
     * 
     * @type {string}
     * @memberof UserGroup
     */
    UserName?: string;
}

/**
 * Check if a given object implements the UserGroup interface.
 */
export function instanceOfUserGroup(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserGroupFromJSON(json: any): UserGroup {
    return UserGroupFromJSONTyped(json, false);
}

export function UserGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'Id': !exists(json, 'Id') ? undefined : json['Id'],
        'GroupId': !exists(json, 'GroupId') ? undefined : json['GroupId'],
        'GroupDN': !exists(json, 'GroupDN') ? undefined : json['GroupDN'],
        'GroupName': !exists(json, 'GroupName') ? undefined : json['GroupName'],
        'UserId': !exists(json, 'UserId') ? undefined : json['UserId'],
        'UserDN': !exists(json, 'UserDN') ? undefined : json['UserDN'],
        'UserName': !exists(json, 'UserName') ? undefined : json['UserName'],
    };
}

export function UserGroupToJSON(value?: UserGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.Id,
        'GroupId': value.GroupId,
        'GroupDN': value.GroupDN,
        'GroupName': value.GroupName,
        'UserId': value.UserId,
        'UserDN': value.UserDN,
        'UserName': value.UserName,
    };
}

