// Code generated by go-swagger; DO NOT EDIT.

package noodle_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mwinters-stuff/noodle/server/models"
)

// DeleteNoodleGroupApplicationsOKCode is the HTTP code returned for type DeleteNoodleGroupApplicationsOK
const DeleteNoodleGroupApplicationsOKCode int = 200

/*
DeleteNoodleGroupApplicationsOK Group Application Deleted.

swagger:response deleteNoodleGroupApplicationsOK
*/
type DeleteNoodleGroupApplicationsOK struct {
}

// NewDeleteNoodleGroupApplicationsOK creates DeleteNoodleGroupApplicationsOK with default headers values
func NewDeleteNoodleGroupApplicationsOK() *DeleteNoodleGroupApplicationsOK {

	return &DeleteNoodleGroupApplicationsOK{}
}

// WriteResponse to the client
func (o *DeleteNoodleGroupApplicationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteNoodleGroupApplicationsUnauthorizedCode is the HTTP code returned for type DeleteNoodleGroupApplicationsUnauthorized
const DeleteNoodleGroupApplicationsUnauthorizedCode int = 401

/*
DeleteNoodleGroupApplicationsUnauthorized unauthorized

swagger:response deleteNoodleGroupApplicationsUnauthorized
*/
type DeleteNoodleGroupApplicationsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteNoodleGroupApplicationsUnauthorized creates DeleteNoodleGroupApplicationsUnauthorized with default headers values
func NewDeleteNoodleGroupApplicationsUnauthorized() *DeleteNoodleGroupApplicationsUnauthorized {

	return &DeleteNoodleGroupApplicationsUnauthorized{}
}

// WithPayload adds the payload to the delete noodle group applications unauthorized response
func (o *DeleteNoodleGroupApplicationsUnauthorized) WithPayload(payload *models.Error) *DeleteNoodleGroupApplicationsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete noodle group applications unauthorized response
func (o *DeleteNoodleGroupApplicationsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoodleGroupApplicationsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoodleGroupApplicationsConflictCode is the HTTP code returned for type DeleteNoodleGroupApplicationsConflict
const DeleteNoodleGroupApplicationsConflictCode int = 409

/*
DeleteNoodleGroupApplicationsConflict Invalid Input

swagger:response deleteNoodleGroupApplicationsConflict
*/
type DeleteNoodleGroupApplicationsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteNoodleGroupApplicationsConflict creates DeleteNoodleGroupApplicationsConflict with default headers values
func NewDeleteNoodleGroupApplicationsConflict() *DeleteNoodleGroupApplicationsConflict {

	return &DeleteNoodleGroupApplicationsConflict{}
}

// WithPayload adds the payload to the delete noodle group applications conflict response
func (o *DeleteNoodleGroupApplicationsConflict) WithPayload(payload *models.Error) *DeleteNoodleGroupApplicationsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete noodle group applications conflict response
func (o *DeleteNoodleGroupApplicationsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoodleGroupApplicationsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
