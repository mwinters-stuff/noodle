// Code generated by go-swagger; DO NOT EDIT.

package noodle_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mwinters-stuff/noodle/server/models"
)

// DeleteNoodleUserApplicationsOKCode is the HTTP code returned for type DeleteNoodleUserApplicationsOK
const DeleteNoodleUserApplicationsOKCode int = 200

/*
DeleteNoodleUserApplicationsOK User Application Deleted.

swagger:response deleteNoodleUserApplicationsOK
*/
type DeleteNoodleUserApplicationsOK struct {
}

// NewDeleteNoodleUserApplicationsOK creates DeleteNoodleUserApplicationsOK with default headers values
func NewDeleteNoodleUserApplicationsOK() *DeleteNoodleUserApplicationsOK {

	return &DeleteNoodleUserApplicationsOK{}
}

// WriteResponse to the client
func (o *DeleteNoodleUserApplicationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteNoodleUserApplicationsUnauthorizedCode is the HTTP code returned for type DeleteNoodleUserApplicationsUnauthorized
const DeleteNoodleUserApplicationsUnauthorizedCode int = 401

/*
DeleteNoodleUserApplicationsUnauthorized unauthorized

swagger:response deleteNoodleUserApplicationsUnauthorized
*/
type DeleteNoodleUserApplicationsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteNoodleUserApplicationsUnauthorized creates DeleteNoodleUserApplicationsUnauthorized with default headers values
func NewDeleteNoodleUserApplicationsUnauthorized() *DeleteNoodleUserApplicationsUnauthorized {

	return &DeleteNoodleUserApplicationsUnauthorized{}
}

// WithPayload adds the payload to the delete noodle user applications unauthorized response
func (o *DeleteNoodleUserApplicationsUnauthorized) WithPayload(payload *models.Error) *DeleteNoodleUserApplicationsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete noodle user applications unauthorized response
func (o *DeleteNoodleUserApplicationsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoodleUserApplicationsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNoodleUserApplicationsMethodNotAllowedCode is the HTTP code returned for type DeleteNoodleUserApplicationsMethodNotAllowed
const DeleteNoodleUserApplicationsMethodNotAllowedCode int = 405

/*
DeleteNoodleUserApplicationsMethodNotAllowed Invalid Input

swagger:response deleteNoodleUserApplicationsMethodNotAllowed
*/
type DeleteNoodleUserApplicationsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteNoodleUserApplicationsMethodNotAllowed creates DeleteNoodleUserApplicationsMethodNotAllowed with default headers values
func NewDeleteNoodleUserApplicationsMethodNotAllowed() *DeleteNoodleUserApplicationsMethodNotAllowed {

	return &DeleteNoodleUserApplicationsMethodNotAllowed{}
}

// WithPayload adds the payload to the delete noodle user applications method not allowed response
func (o *DeleteNoodleUserApplicationsMethodNotAllowed) WithPayload(payload *models.Error) *DeleteNoodleUserApplicationsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete noodle user applications method not allowed response
func (o *DeleteNoodleUserApplicationsMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNoodleUserApplicationsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
