// Code generated by go-swagger; DO NOT EDIT.

package noodle_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mwinters-stuff/noodle/server/models"
)

// PostNoodleGroupApplicationsOKCode is the HTTP code returned for type PostNoodleGroupApplicationsOK
const PostNoodleGroupApplicationsOKCode int = 200

/*
PostNoodleGroupApplicationsOK OK

swagger:response postNoodleGroupApplicationsOK
*/
type PostNoodleGroupApplicationsOK struct {

	/*
	  In: Body
	*/
	Payload *models.GroupApplications `json:"body,omitempty"`
}

// NewPostNoodleGroupApplicationsOK creates PostNoodleGroupApplicationsOK with default headers values
func NewPostNoodleGroupApplicationsOK() *PostNoodleGroupApplicationsOK {

	return &PostNoodleGroupApplicationsOK{}
}

// WithPayload adds the payload to the post noodle group applications o k response
func (o *PostNoodleGroupApplicationsOK) WithPayload(payload *models.GroupApplications) *PostNoodleGroupApplicationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post noodle group applications o k response
func (o *PostNoodleGroupApplicationsOK) SetPayload(payload *models.GroupApplications) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNoodleGroupApplicationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostNoodleGroupApplicationsUnauthorizedCode is the HTTP code returned for type PostNoodleGroupApplicationsUnauthorized
const PostNoodleGroupApplicationsUnauthorizedCode int = 401

/*
PostNoodleGroupApplicationsUnauthorized unauthorized

swagger:response postNoodleGroupApplicationsUnauthorized
*/
type PostNoodleGroupApplicationsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostNoodleGroupApplicationsUnauthorized creates PostNoodleGroupApplicationsUnauthorized with default headers values
func NewPostNoodleGroupApplicationsUnauthorized() *PostNoodleGroupApplicationsUnauthorized {

	return &PostNoodleGroupApplicationsUnauthorized{}
}

// WithPayload adds the payload to the post noodle group applications unauthorized response
func (o *PostNoodleGroupApplicationsUnauthorized) WithPayload(payload *models.Error) *PostNoodleGroupApplicationsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post noodle group applications unauthorized response
func (o *PostNoodleGroupApplicationsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNoodleGroupApplicationsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostNoodleGroupApplicationsConflictCode is the HTTP code returned for type PostNoodleGroupApplicationsConflict
const PostNoodleGroupApplicationsConflictCode int = 409

/*
PostNoodleGroupApplicationsConflict Failed

swagger:response postNoodleGroupApplicationsConflict
*/
type PostNoodleGroupApplicationsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostNoodleGroupApplicationsConflict creates PostNoodleGroupApplicationsConflict with default headers values
func NewPostNoodleGroupApplicationsConflict() *PostNoodleGroupApplicationsConflict {

	return &PostNoodleGroupApplicationsConflict{}
}

// WithPayload adds the payload to the post noodle group applications conflict response
func (o *PostNoodleGroupApplicationsConflict) WithPayload(payload *models.Error) *PostNoodleGroupApplicationsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post noodle group applications conflict response
func (o *PostNoodleGroupApplicationsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNoodleGroupApplicationsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
