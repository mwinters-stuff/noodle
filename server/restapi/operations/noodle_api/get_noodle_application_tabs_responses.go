// Code generated by go-swagger; DO NOT EDIT.

package noodle_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mwinters-stuff/noodle/server/models"
)

// GetNoodleApplicationTabsOKCode is the HTTP code returned for type GetNoodleApplicationTabsOK
const GetNoodleApplicationTabsOKCode int = 200

/*
GetNoodleApplicationTabsOK OK

swagger:response getNoodleApplicationTabsOK
*/
type GetNoodleApplicationTabsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ApplicationTab `json:"body,omitempty"`
}

// NewGetNoodleApplicationTabsOK creates GetNoodleApplicationTabsOK with default headers values
func NewGetNoodleApplicationTabsOK() *GetNoodleApplicationTabsOK {

	return &GetNoodleApplicationTabsOK{}
}

// WithPayload adds the payload to the get noodle application tabs o k response
func (o *GetNoodleApplicationTabsOK) WithPayload(payload []*models.ApplicationTab) *GetNoodleApplicationTabsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get noodle application tabs o k response
func (o *GetNoodleApplicationTabsOK) SetPayload(payload []*models.ApplicationTab) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNoodleApplicationTabsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ApplicationTab, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetNoodleApplicationTabsUnauthorizedCode is the HTTP code returned for type GetNoodleApplicationTabsUnauthorized
const GetNoodleApplicationTabsUnauthorizedCode int = 401

/*
GetNoodleApplicationTabsUnauthorized unauthorized

swagger:response getNoodleApplicationTabsUnauthorized
*/
type GetNoodleApplicationTabsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNoodleApplicationTabsUnauthorized creates GetNoodleApplicationTabsUnauthorized with default headers values
func NewGetNoodleApplicationTabsUnauthorized() *GetNoodleApplicationTabsUnauthorized {

	return &GetNoodleApplicationTabsUnauthorized{}
}

// WithPayload adds the payload to the get noodle application tabs unauthorized response
func (o *GetNoodleApplicationTabsUnauthorized) WithPayload(payload *models.Error) *GetNoodleApplicationTabsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get noodle application tabs unauthorized response
func (o *GetNoodleApplicationTabsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNoodleApplicationTabsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNoodleApplicationTabsConflictCode is the HTTP code returned for type GetNoodleApplicationTabsConflict
const GetNoodleApplicationTabsConflictCode int = 409

/*
GetNoodleApplicationTabsConflict Failed

swagger:response getNoodleApplicationTabsConflict
*/
type GetNoodleApplicationTabsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNoodleApplicationTabsConflict creates GetNoodleApplicationTabsConflict with default headers values
func NewGetNoodleApplicationTabsConflict() *GetNoodleApplicationTabsConflict {

	return &GetNoodleApplicationTabsConflict{}
}

// WithPayload adds the payload to the get noodle application tabs conflict response
func (o *GetNoodleApplicationTabsConflict) WithPayload(payload *models.Error) *GetNoodleApplicationTabsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get noodle application tabs conflict response
func (o *GetNoodleApplicationTabsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNoodleApplicationTabsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
