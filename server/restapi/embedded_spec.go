// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Noodle",
    "title": "Noodle",
    "contact": {
      "name": "Source Code",
      "url": "https://gitea.winters.org.nz/mathew/noodle"
    },
    "license": {
      "name": "Apache License",
      "url": "https://gitea.winters.org.nz/mathew/noodle/src/branch/master/LICENSE"
    },
    "version": "2.0"
  },
  "basePath": "/api",
  "paths": {
    "/healthz": {
      "get": {
        "description": "used by Kubernetes liveness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Liveness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/noodle/groups": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Gets the list of groups",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "groupid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/group"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/noodle/ldap/reload": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Loads Users and Groups to Database",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/noodle/user-groups": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Gets the list of Groups for a user or users for a group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userid",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "groupid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user_group"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/noodle/users": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Gets the list of users or a single user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/readyz": {
      "get": {
        "description": "used by Kubernetes readiness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Readiness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "app_list": {
      "type": "object",
      "properties": {
        "AppCount": {
          "type": "integer"
        },
        "Apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/application_template"
          }
        }
      }
    },
    "application": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Enhanced": {
          "type": "boolean"
        },
        "Icon": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "License": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "TemplateAppid": {
          "type": "string"
        },
        "TileBackground": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        }
      }
    },
    "application_tab": {
      "type": "object",
      "properties": {
        "Application": {
          "$ref": "#/definitions/application"
        },
        "ApplicationId": {
          "type": "integer",
          "format": "int64"
        },
        "DisplayOrder": {
          "type": "integer"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "TabId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "application_template": {
      "type": "object",
      "properties": {
        "Appid": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enhanced": {
          "type": "boolean"
        },
        "Icon": {
          "type": "string"
        },
        "License": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "SHA": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "tile_background": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "group": {
      "type": "object",
      "properties": {
        "DN": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "group_applications": {
      "type": "object",
      "properties": {
        "Application": {
          "$ref": "#/definitions/application"
        },
        "ApplicationId": {
          "type": "integer",
          "format": "int64"
        },
        "GroupId": {
          "type": "integer",
          "format": "int64"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "tab": {
      "type": "object",
      "properties": {
        "DisplayOrder": {
          "type": "integer"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Label": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "DN": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "GivenName": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Surname": {
          "type": "string"
        },
        "UidNumber": {
          "type": "integer"
        },
        "Username": {
          "type": "string"
        }
      }
    },
    "user_applications": {
      "type": "object",
      "properties": {
        "Application": {
          "$ref": "#/definitions/application"
        },
        "ApplicationId": {
          "type": "integer",
          "format": "int64"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "UserId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "user_group": {
      "type": "object",
      "properties": {
        "GroupDN": {
          "type": "string"
        },
        "GroupId": {
          "type": "integer",
          "format": "int64"
        },
        "GroupName": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "UserDN": {
          "type": "string"
        },
        "UserId": {
          "type": "integer",
          "format": "int64"
        },
        "UserName": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "Remote-User",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Noodle",
    "title": "Noodle",
    "contact": {
      "name": "Source Code",
      "url": "https://gitea.winters.org.nz/mathew/noodle"
    },
    "license": {
      "name": "Apache License",
      "url": "https://gitea.winters.org.nz/mathew/noodle/src/branch/master/LICENSE"
    },
    "version": "2.0"
  },
  "basePath": "/api",
  "paths": {
    "/healthz": {
      "get": {
        "description": "used by Kubernetes liveness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Liveness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/noodle/groups": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Gets the list of groups",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "groupid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/group"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/noodle/ldap/reload": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Loads Users and Groups to Database",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/noodle/user-groups": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Gets the list of Groups for a user or users for a group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userid",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "groupid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user_group"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/noodle/users": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "description": "Gets the list of users or a single user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "noodle-api"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "userid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/readyz": {
      "get": {
        "description": "used by Kubernetes readiness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Readiness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "app_list": {
      "type": "object",
      "properties": {
        "AppCount": {
          "type": "integer"
        },
        "Apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/application_template"
          }
        }
      }
    },
    "application": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Enhanced": {
          "type": "boolean"
        },
        "Icon": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "License": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "TemplateAppid": {
          "type": "string"
        },
        "TileBackground": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        }
      }
    },
    "application_tab": {
      "type": "object",
      "properties": {
        "Application": {
          "$ref": "#/definitions/application"
        },
        "ApplicationId": {
          "type": "integer",
          "format": "int64"
        },
        "DisplayOrder": {
          "type": "integer"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "TabId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "application_template": {
      "type": "object",
      "properties": {
        "Appid": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enhanced": {
          "type": "boolean"
        },
        "Icon": {
          "type": "string"
        },
        "License": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "SHA": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "tile_background": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "group": {
      "type": "object",
      "properties": {
        "DN": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "group_applications": {
      "type": "object",
      "properties": {
        "Application": {
          "$ref": "#/definitions/application"
        },
        "ApplicationId": {
          "type": "integer",
          "format": "int64"
        },
        "GroupId": {
          "type": "integer",
          "format": "int64"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "tab": {
      "type": "object",
      "properties": {
        "DisplayOrder": {
          "type": "integer"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Label": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "DN": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "GivenName": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Surname": {
          "type": "string"
        },
        "UidNumber": {
          "type": "integer"
        },
        "Username": {
          "type": "string"
        }
      }
    },
    "user_applications": {
      "type": "object",
      "properties": {
        "Application": {
          "$ref": "#/definitions/application"
        },
        "ApplicationId": {
          "type": "integer",
          "format": "int64"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "UserId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "user_group": {
      "type": "object",
      "properties": {
        "GroupDN": {
          "type": "string"
        },
        "GroupId": {
          "type": "integer",
          "format": "int64"
        },
        "GroupName": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "UserDN": {
          "type": "string"
        },
        "UserId": {
          "type": "integer",
          "format": "int64"
        },
        "UserName": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "Remote-User",
      "in": "header"
    }
  }
}`))
}
