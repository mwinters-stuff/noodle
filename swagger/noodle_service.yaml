info:
  contact:
    name: Source Code
    url: https://gitea.winters.org.nz/mathew/noodle
  description: Noodle
  license:
    name: Apache License
    url: https://gitea.winters.org.nz/mathew/noodle/src/branch/master/LICENSE
  title: Noodle
  version: "2.0"
basePath: /api
host: localhost:8081
securityDefinitions:
  key:
    type: apiKey
    in: header
    name: Remote-User

paths:
  /healthz:
    get:
      consumes:
      - application/json
      description: used by Kubernetes liveness probe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Liveness check
      tags:
      - Kubernetes
  /readyz:
    get:
      consumes:
      - application/json
      description: used by Kubernetes readiness probe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Readiness check
      tags:
      - Kubernetes
 
  
  /noodle/users:
    get:
      description: Gets the list of users or a single user
      produces:
      - application/json
      parameters:
        - name: userid
          in: query
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/error'
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/groups:
    get:
      description: Gets the list of groups
      produces:
      - application/json
      parameters:
        - name: groupid
          in: query
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/group'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/error'
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/user-groups:
    get:
      description: Gets the list of Groups for a user or users for a group
      produces:
      - application/json
      parameters:
        - name: userid
          in: query
          type: integer
        - name: groupid
          in: query
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/user_group'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/error'
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []

        
  /noodle/ldap/reload:
    get:
      description: Loads Users and Groups to Database
      produces:
      - application/json
      responses:
        '200':
          description: Success
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/error'
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/heimdall/reload:
    get:
      description: Loads Hiemdall App Templates to Database
      produces:
      - application/json
      responses:
        '200':
          description: Success
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/error'
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/tabs:
    get:
      description: Gets the list of tabs
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/tab'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    post:
      consumes:
      - application/json
      description: Adds a new tab
      parameters:
        - name: action
          in: query
          type: string
          enum:
            - insert
            - update
          required: true
        - name: tab
          in: body
          required: true
          schema:
            $ref: '#/definitions/tab'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/tab'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    delete:
      consumes:
      - application/json
      description: Deletes the tab
      parameters:
        - name: tabid
          in: query
          type: integer
          required: true
      responses:
        '200':
          description: Tab Deleted.
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Invalid Input
          schema:
            $ref: "#/definitions/error"
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/application-tabs:
    get:
      description: Gets the list of applications under the tab
      produces:
      - application/json
      parameters:
        - name: tab_id
          in: query
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/application_tab'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    post:
      consumes:
      - application/json
      description: Adds a new application in a  tab
      parameters:
        - name: action
          in: query
          type: string
          enum:
            - insert
            - update
          required: true
        - name: application_tab
          in: body
          required: true
          schema:
            $ref: '#/definitions/application_tab'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_tab'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    delete:
      consumes:
      - application/json
      description: Deletes the application_tab
      parameters:
        - name: application_tab_id
          in: query
          type: integer
          required: true
      responses:
        '200':
          description: Application Tab Deleted.
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Invalid Input
          schema:
            $ref: "#/definitions/error"
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/user-applications:
    get:
      description: Gets the list of user applications 
      produces:
      - application/json
      parameters:
        - name: user_id
          in: query
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/user_applications'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    post:
      consumes:
      - application/json
      description: Adds a new user application
      parameters:
        - name: user_application
          in: body
          required: true
          schema:
            $ref: '#/definitions/user_applications'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user_applications'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    delete:
      consumes:
      - application/json
      description: Deletes the user application
      parameters:
        - name: user_application_id
          in: query
          type: integer
          required: true
      responses:
        '200':
          description: User Application Deleted.
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Invalid Input
          schema:
            $ref: "#/definitions/error"
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/group-applications:
    get:
      description: Gets the list of group applications 
      produces:
      - application/json
      parameters:
        - name: group_id
          in: query
          required: true
          type: integer      
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/group_applications'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    post:
      consumes:
      - application/json
      description: Adds a new group application
      parameters:
        - name: group_application
          in: body
          required: true
          schema:
            $ref: '#/definitions/group_applications'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/group_applications'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    delete:
      consumes:
      - application/json
      description: Deletes the group application
      parameters:
        - name: group_application_id
          in: query
          type: integer
          required: true
      responses:
        '200':
          description: Group Application Deleted.
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Invalid Input
          schema:
            $ref: "#/definitions/error"
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/app-templates:
    get:
      description: Gets the list of application templates
      produces:
      - application/json
      parameters:
        - name: search
          in: query
          required: true
          type: string

      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/application_template'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []

  /noodle/applications:
    get:
      description: Gets application by id or template_id
      produces:
      - application/json
      parameters:
        - name: application_id
          in: query
          required: false
          type: integer
        - name: application_template
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/application'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    post:
      consumes:
      - application/json
      description: Adds a new application
      parameters:
        - name: application
          in: body
          required: true
          schema:
            $ref: '#/definitions/application'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application'
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Failed
          schema:
            $ref: '#/definitions/error'
      tags:
        - noodle-api
      security: 
        - key: []
    delete:
      consumes:
      - application/json
      description: Deletes the application
      parameters:
        - name: application_id
          in: query
          type: integer
          required: true
      responses:
        '200':
          description: Application Deleted.
        '401':
          description: unauthorized
          schema:
            $ref: "#/definitions/error"
        '409':
          description: Invalid Input
          schema:
            $ref: "#/definitions/error"
      tags:
        - noodle-api
      security: 
        - key: []


schemes:
- http
swagger: "2.0"
definitions:
  error:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
      fields:
        type: string
  user:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Username:
        type: string
      DN:
        type: string
      DisplayName:
        type: string
      GivenName:
        type: string
      Surname:
        type: string
      UidNumber:
        type: integer
  group:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      DN:
        type: string
      Name:
        type: string
    
  principal:
      type: string
  user_group:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      GroupId:
        type: integer
        format: int64
      GroupDN:
        type: string
      GroupName:
        type: string
      UserId:
        type: integer
        format: int64
      UserDN:
        type: string
      UserName:
        type: string
  user_applications:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ApplicationId:
        type: integer
        format: int64
      UserId:
        type: integer
        format: int64
      Application:
        $ref: "#/definitions/application"
  tab:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Label:
        type: string
      DisplayOrder:
        type: integer
  group_applications:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ApplicationId:
        type: integer
        format: int64
      GroupId:
        type: integer
        format: int64
      Application:
        $ref: "#/definitions/application"
  application:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      TemplateAppid:
        type: string
      Name:
        type: string
      Website:
        type: string
      License:
        type: string
      Description:
        type: string
      Enhanced:
        type: boolean
      TileBackground:
        type: string
      Icon:
        type: string
  application_tab:
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ApplicationId:
        type: integer
        format: int64
      TabId:
        type: integer
        format: int64
      DisplayOrder:
        type: integer
      Application:
        $ref: "#/definitions/application"
  application_template:
    type: object
    properties: 
      Appid:
        type: string
      Name:
        type: string
      Website:
        type: string
      License:
        type: string
      Description:
        type: string
      Enhanced:
        type: boolean
      tile_background:
        type: string
      Icon:
        type: string
      SHA:
        type: string
  app_list:
    type: object
    properties:
      AppCount:
        type: integer
      Apps:
        type: array
        items:
          $ref: "#/definitions/application_template"

