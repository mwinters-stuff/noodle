// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Noodle is an autogenerated mock type for the Noodle type
type Noodle struct {
	mock.Mock
}

type Noodle_Expecter struct {
	mock *mock.Mock
}

func (_m *Noodle) EXPECT() *Noodle_Expecter {
	return &Noodle_Expecter{mock: &_m.Mock}
}

// Run provides a mock function with given fields:
func (_m *Noodle) Run() {
	_m.Called()
}

// Noodle_Run_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Run'
type Noodle_Run_Call struct {
	*mock.Call
}

// Run is a helper method to define mock.On call
func (_e *Noodle_Expecter) Run() *Noodle_Run_Call {
	return &Noodle_Run_Call{Call: _e.mock.On("Run")}
}

func (_c *Noodle_Run_Call) Run(run func()) *Noodle_Run_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Noodle_Run_Call) Return() *Noodle_Run_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewNoodle interface {
	mock.TestingT
	Cleanup(func())
}

// NewNoodle creates a new instance of Noodle. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNoodle(t mockConstructorTestingTNewNoodle) *Noodle {
	mock := &Noodle{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
