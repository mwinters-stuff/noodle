// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	pgtype "github.com/jackc/pgx/v5/pgtype"
	mock "github.com/stretchr/testify/mock"
)

// TimestamptzScanner is an autogenerated mock type for the TimestamptzScanner type
type TimestamptzScanner struct {
	mock.Mock
}

type TimestamptzScanner_Expecter struct {
	mock *mock.Mock
}

func (_m *TimestamptzScanner) EXPECT() *TimestamptzScanner_Expecter {
	return &TimestamptzScanner_Expecter{mock: &_m.Mock}
}

// ScanTimestamptz provides a mock function with given fields: v
func (_m *TimestamptzScanner) ScanTimestamptz(v pgtype.Timestamptz) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(pgtype.Timestamptz) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TimestamptzScanner_ScanTimestamptz_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScanTimestamptz'
type TimestamptzScanner_ScanTimestamptz_Call struct {
	*mock.Call
}

// ScanTimestamptz is a helper method to define mock.On call
//   - v pgtype.Timestamptz
func (_e *TimestamptzScanner_Expecter) ScanTimestamptz(v interface{}) *TimestamptzScanner_ScanTimestamptz_Call {
	return &TimestamptzScanner_ScanTimestamptz_Call{Call: _e.mock.On("ScanTimestamptz", v)}
}

func (_c *TimestamptzScanner_ScanTimestamptz_Call) Run(run func(v pgtype.Timestamptz)) *TimestamptzScanner_ScanTimestamptz_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(pgtype.Timestamptz))
	})
	return _c
}

func (_c *TimestamptzScanner_ScanTimestamptz_Call) Return(_a0 error) *TimestamptzScanner_ScanTimestamptz_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewTimestamptzScanner interface {
	mock.TestingT
	Cleanup(func())
}

// NewTimestamptzScanner creates a new instance of TimestamptzScanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTimestamptzScanner(t mockConstructorTestingTNewTimestamptzScanner) *TimestamptzScanner {
	mock := &TimestamptzScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
