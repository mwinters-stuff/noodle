// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	pgtype "github.com/jackc/pgx/v5/pgtype"
	mock "github.com/stretchr/testify/mock"
)

// TIDValuer is an autogenerated mock type for the TIDValuer type
type TIDValuer struct {
	mock.Mock
}

type TIDValuer_Expecter struct {
	mock *mock.Mock
}

func (_m *TIDValuer) EXPECT() *TIDValuer_Expecter {
	return &TIDValuer_Expecter{mock: &_m.Mock}
}

// TIDValue provides a mock function with given fields:
func (_m *TIDValuer) TIDValue() (pgtype.TID, error) {
	ret := _m.Called()

	var r0 pgtype.TID
	if rf, ok := ret.Get(0).(func() pgtype.TID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(pgtype.TID)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TIDValuer_TIDValue_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TIDValue'
type TIDValuer_TIDValue_Call struct {
	*mock.Call
}

// TIDValue is a helper method to define mock.On call
func (_e *TIDValuer_Expecter) TIDValue() *TIDValuer_TIDValue_Call {
	return &TIDValuer_TIDValue_Call{Call: _e.mock.On("TIDValue")}
}

func (_c *TIDValuer_TIDValue_Call) Run(run func()) *TIDValuer_TIDValue_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TIDValuer_TIDValue_Call) Return(_a0 pgtype.TID, _a1 error) *TIDValuer_TIDValue_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewTIDValuer interface {
	mock.TestingT
	Cleanup(func())
}

// NewTIDValuer creates a new instance of TIDValuer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTIDValuer(t mockConstructorTestingTNewTIDValuer) *TIDValuer {
	mock := &TIDValuer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
