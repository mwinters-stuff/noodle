// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SkipUnderlyingTypePlanner is an autogenerated mock type for the SkipUnderlyingTypePlanner type
type SkipUnderlyingTypePlanner struct {
	mock.Mock
}

type SkipUnderlyingTypePlanner_Expecter struct {
	mock *mock.Mock
}

func (_m *SkipUnderlyingTypePlanner) EXPECT() *SkipUnderlyingTypePlanner_Expecter {
	return &SkipUnderlyingTypePlanner_Expecter{mock: &_m.Mock}
}

// SkipUnderlyingTypePlan provides a mock function with given fields:
func (_m *SkipUnderlyingTypePlanner) SkipUnderlyingTypePlan() {
	_m.Called()
}

// SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SkipUnderlyingTypePlan'
type SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call struct {
	*mock.Call
}

// SkipUnderlyingTypePlan is a helper method to define mock.On call
func (_e *SkipUnderlyingTypePlanner_Expecter) SkipUnderlyingTypePlan() *SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call {
	return &SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call{Call: _e.mock.On("SkipUnderlyingTypePlan")}
}

func (_c *SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call) Run(run func()) *SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call) Return() *SkipUnderlyingTypePlanner_SkipUnderlyingTypePlan_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewSkipUnderlyingTypePlanner interface {
	mock.TestingT
	Cleanup(func())
}

// NewSkipUnderlyingTypePlanner creates a new instance of SkipUnderlyingTypePlanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSkipUnderlyingTypePlanner(t mockConstructorTestingTNewSkipUnderlyingTypePlanner) *SkipUnderlyingTypePlanner {
	mock := &SkipUnderlyingTypePlanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
