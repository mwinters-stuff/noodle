// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	pgtype "github.com/jackc/pgx/v5/pgtype"
	mock "github.com/stretchr/testify/mock"
)

// PolygonScanner is an autogenerated mock type for the PolygonScanner type
type PolygonScanner struct {
	mock.Mock
}

type PolygonScanner_Expecter struct {
	mock *mock.Mock
}

func (_m *PolygonScanner) EXPECT() *PolygonScanner_Expecter {
	return &PolygonScanner_Expecter{mock: &_m.Mock}
}

// ScanPolygon provides a mock function with given fields: v
func (_m *PolygonScanner) ScanPolygon(v pgtype.Polygon) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(pgtype.Polygon) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PolygonScanner_ScanPolygon_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScanPolygon'
type PolygonScanner_ScanPolygon_Call struct {
	*mock.Call
}

// ScanPolygon is a helper method to define mock.On call
//   - v pgtype.Polygon
func (_e *PolygonScanner_Expecter) ScanPolygon(v interface{}) *PolygonScanner_ScanPolygon_Call {
	return &PolygonScanner_ScanPolygon_Call{Call: _e.mock.On("ScanPolygon", v)}
}

func (_c *PolygonScanner_ScanPolygon_Call) Run(run func(v pgtype.Polygon)) *PolygonScanner_ScanPolygon_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(pgtype.Polygon))
	})
	return _c
}

func (_c *PolygonScanner_ScanPolygon_Call) Return(_a0 error) *PolygonScanner_ScanPolygon_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewPolygonScanner interface {
	mock.TestingT
	Cleanup(func())
}

// NewPolygonScanner creates a new instance of PolygonScanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPolygonScanner(t mockConstructorTestingTNewPolygonScanner) *PolygonScanner {
	mock := &PolygonScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
