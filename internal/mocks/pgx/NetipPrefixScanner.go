// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	netip "net/netip"

	mock "github.com/stretchr/testify/mock"
)

// NetipPrefixScanner is an autogenerated mock type for the NetipPrefixScanner type
type NetipPrefixScanner struct {
	mock.Mock
}

type NetipPrefixScanner_Expecter struct {
	mock *mock.Mock
}

func (_m *NetipPrefixScanner) EXPECT() *NetipPrefixScanner_Expecter {
	return &NetipPrefixScanner_Expecter{mock: &_m.Mock}
}

// ScanNetipPrefix provides a mock function with given fields: v
func (_m *NetipPrefixScanner) ScanNetipPrefix(v netip.Prefix) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(netip.Prefix) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetipPrefixScanner_ScanNetipPrefix_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScanNetipPrefix'
type NetipPrefixScanner_ScanNetipPrefix_Call struct {
	*mock.Call
}

// ScanNetipPrefix is a helper method to define mock.On call
//   - v netip.Prefix
func (_e *NetipPrefixScanner_Expecter) ScanNetipPrefix(v interface{}) *NetipPrefixScanner_ScanNetipPrefix_Call {
	return &NetipPrefixScanner_ScanNetipPrefix_Call{Call: _e.mock.On("ScanNetipPrefix", v)}
}

func (_c *NetipPrefixScanner_ScanNetipPrefix_Call) Run(run func(v netip.Prefix)) *NetipPrefixScanner_ScanNetipPrefix_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(netip.Prefix))
	})
	return _c
}

func (_c *NetipPrefixScanner_ScanNetipPrefix_Call) Return(_a0 error) *NetipPrefixScanner_ScanNetipPrefix_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewNetipPrefixScanner interface {
	mock.TestingT
	Cleanup(func())
}

// NewNetipPrefixScanner creates a new instance of NetipPrefixScanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNetipPrefixScanner(t mockConstructorTestingTNewNetipPrefixScanner) *NetipPrefixScanner {
	mock := &NetipPrefixScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
