// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TestingLogger is an autogenerated mock type for the TestingLogger type
type TestingLogger struct {
	mock.Mock
}

type TestingLogger_Expecter struct {
	mock *mock.Mock
}

func (_m *TestingLogger) EXPECT() *TestingLogger_Expecter {
	return &TestingLogger_Expecter{mock: &_m.Mock}
}

// Log provides a mock function with given fields: args
func (_m *TestingLogger) Log(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// TestingLogger_Log_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Log'
type TestingLogger_Log_Call struct {
	*mock.Call
}

// Log is a helper method to define mock.On call
//   - args ...interface{}
func (_e *TestingLogger_Expecter) Log(args ...interface{}) *TestingLogger_Log_Call {
	return &TestingLogger_Log_Call{Call: _e.mock.On("Log",
		append([]interface{}{}, args...)...)}
}

func (_c *TestingLogger_Log_Call) Run(run func(args ...interface{})) *TestingLogger_Log_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]interface{}, len(args)-0)
		for i, a := range args[0:] {
			if a != nil {
				variadicArgs[i] = a.(interface{})
			}
		}
		run(variadicArgs...)
	})
	return _c
}

func (_c *TestingLogger_Log_Call) Return() *TestingLogger_Log_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewTestingLogger interface {
	mock.TestingT
	Cleanup(func())
}

// NewTestingLogger creates a new instance of TestingLogger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTestingLogger(t mockConstructorTestingTNewTestingLogger) *TestingLogger {
	mock := &TestingLogger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
