// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	pgtype "github.com/jackc/pgx/v5/pgtype"
	mock "github.com/stretchr/testify/mock"
)

// WrappedScanPlanNextSetter is an autogenerated mock type for the WrappedScanPlanNextSetter type
type WrappedScanPlanNextSetter struct {
	mock.Mock
}

type WrappedScanPlanNextSetter_Expecter struct {
	mock *mock.Mock
}

func (_m *WrappedScanPlanNextSetter) EXPECT() *WrappedScanPlanNextSetter_Expecter {
	return &WrappedScanPlanNextSetter_Expecter{mock: &_m.Mock}
}

// Scan provides a mock function with given fields: src, target
func (_m *WrappedScanPlanNextSetter) Scan(src []byte, target interface{}) error {
	ret := _m.Called(src, target)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, interface{}) error); ok {
		r0 = rf(src, target)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WrappedScanPlanNextSetter_Scan_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Scan'
type WrappedScanPlanNextSetter_Scan_Call struct {
	*mock.Call
}

// Scan is a helper method to define mock.On call
//   - src []byte
//   - target interface{}
func (_e *WrappedScanPlanNextSetter_Expecter) Scan(src interface{}, target interface{}) *WrappedScanPlanNextSetter_Scan_Call {
	return &WrappedScanPlanNextSetter_Scan_Call{Call: _e.mock.On("Scan", src, target)}
}

func (_c *WrappedScanPlanNextSetter_Scan_Call) Run(run func(src []byte, target interface{})) *WrappedScanPlanNextSetter_Scan_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte), args[1].(interface{}))
	})
	return _c
}

func (_c *WrappedScanPlanNextSetter_Scan_Call) Return(_a0 error) *WrappedScanPlanNextSetter_Scan_Call {
	_c.Call.Return(_a0)
	return _c
}

// SetNext provides a mock function with given fields: _a0
func (_m *WrappedScanPlanNextSetter) SetNext(_a0 pgtype.ScanPlan) {
	_m.Called(_a0)
}

// WrappedScanPlanNextSetter_SetNext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetNext'
type WrappedScanPlanNextSetter_SetNext_Call struct {
	*mock.Call
}

// SetNext is a helper method to define mock.On call
//   - _a0 pgtype.ScanPlan
func (_e *WrappedScanPlanNextSetter_Expecter) SetNext(_a0 interface{}) *WrappedScanPlanNextSetter_SetNext_Call {
	return &WrappedScanPlanNextSetter_SetNext_Call{Call: _e.mock.On("SetNext", _a0)}
}

func (_c *WrappedScanPlanNextSetter_SetNext_Call) Run(run func(_a0 pgtype.ScanPlan)) *WrappedScanPlanNextSetter_SetNext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(pgtype.ScanPlan))
	})
	return _c
}

func (_c *WrappedScanPlanNextSetter_SetNext_Call) Return() *WrappedScanPlanNextSetter_SetNext_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewWrappedScanPlanNextSetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewWrappedScanPlanNextSetter creates a new instance of WrappedScanPlanNextSetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWrappedScanPlanNextSetter(t mockConstructorTestingTNewWrappedScanPlanNextSetter) *WrappedScanPlanNextSetter {
	mock := &WrappedScanPlanNextSetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
