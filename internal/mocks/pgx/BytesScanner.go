// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// BytesScanner is an autogenerated mock type for the BytesScanner type
type BytesScanner struct {
	mock.Mock
}

type BytesScanner_Expecter struct {
	mock *mock.Mock
}

func (_m *BytesScanner) EXPECT() *BytesScanner_Expecter {
	return &BytesScanner_Expecter{mock: &_m.Mock}
}

// ScanBytes provides a mock function with given fields: v
func (_m *BytesScanner) ScanBytes(v []byte) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// BytesScanner_ScanBytes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScanBytes'
type BytesScanner_ScanBytes_Call struct {
	*mock.Call
}

// ScanBytes is a helper method to define mock.On call
//   - v []byte
func (_e *BytesScanner_Expecter) ScanBytes(v interface{}) *BytesScanner_ScanBytes_Call {
	return &BytesScanner_ScanBytes_Call{Call: _e.mock.On("ScanBytes", v)}
}

func (_c *BytesScanner_ScanBytes_Call) Run(run func(v []byte)) *BytesScanner_ScanBytes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *BytesScanner_ScanBytes_Call) Return(_a0 error) *BytesScanner_ScanBytes_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewBytesScanner interface {
	mock.TestingT
	Cleanup(func())
}

// NewBytesScanner creates a new instance of BytesScanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBytesScanner(t mockConstructorTestingTNewBytesScanner) *BytesScanner {
	mock := &BytesScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
