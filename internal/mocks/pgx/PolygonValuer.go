// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	pgtype "github.com/jackc/pgx/v5/pgtype"
	mock "github.com/stretchr/testify/mock"
)

// PolygonValuer is an autogenerated mock type for the PolygonValuer type
type PolygonValuer struct {
	mock.Mock
}

type PolygonValuer_Expecter struct {
	mock *mock.Mock
}

func (_m *PolygonValuer) EXPECT() *PolygonValuer_Expecter {
	return &PolygonValuer_Expecter{mock: &_m.Mock}
}

// PolygonValue provides a mock function with given fields:
func (_m *PolygonValuer) PolygonValue() (pgtype.Polygon, error) {
	ret := _m.Called()

	var r0 pgtype.Polygon
	if rf, ok := ret.Get(0).(func() pgtype.Polygon); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(pgtype.Polygon)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PolygonValuer_PolygonValue_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PolygonValue'
type PolygonValuer_PolygonValue_Call struct {
	*mock.Call
}

// PolygonValue is a helper method to define mock.On call
func (_e *PolygonValuer_Expecter) PolygonValue() *PolygonValuer_PolygonValue_Call {
	return &PolygonValuer_PolygonValue_Call{Call: _e.mock.On("PolygonValue")}
}

func (_c *PolygonValuer_PolygonValue_Call) Run(run func()) *PolygonValuer_PolygonValue_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *PolygonValuer_PolygonValue_Call) Return(_a0 pgtype.Polygon, _a1 error) *PolygonValuer_PolygonValue_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewPolygonValuer interface {
	mock.TestingT
	Cleanup(func())
}

// NewPolygonValuer creates a new instance of PolygonValuer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPolygonValuer(t mockConstructorTestingTNewPolygonValuer) *PolygonValuer {
	mock := &PolygonValuer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
